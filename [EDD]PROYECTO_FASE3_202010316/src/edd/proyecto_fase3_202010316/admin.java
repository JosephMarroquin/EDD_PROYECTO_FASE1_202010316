/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edd.proyecto_fase3_202010316;

import com.google.gson.Gson;
import java.io.File;
import java.util.Scanner;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;

import TablaHash.*;
import java.awt.BorderLayout;
import java.awt.Image;
import javax.swing.ImageIcon;

/**
 *
 * @author josep
 */
public class admin extends javax.swing.JFrame {

    TablaHash tablah = new TablaHash();

    /**
     * Creates new form admin
     */
    public admin() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jLabel1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Ver Tabla Hash");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(jLabel1);

        jMenu1.setText("File");

        jMenuItem2.setText("Cargar Clientes");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem3.setText("Cargar Mensajeros");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem5.setText("Cargar Lugares");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem5);

        jMenuItem6.setText("Cargar Rutas");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem6);

        jMenuBar1.add(jMenu1);

        jMenu3.setText("Reportes");

        jMenuItem4.setText("Graficar Tabla Hash");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem4);

        jMenuBar1.add(jMenu3);

        jMenu2.setText("Perfil");

        jMenuItem1.setText("Cerrar Sesion");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(467, 467, 467)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(0, 630, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 545, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        login log = new login();
        log.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        try {
            Gson json = new Gson();
            JFileChooser selector = new JFileChooser();
            File file;
            selector.setMultiSelectionEnabled(false);
            FileNameExtensionFilter filtro = new FileNameExtensionFilter(null, "json");
            selector.setFileFilter(filtro);

            if (selector.showDialog(null, null) == JFileChooser.APPROVE_OPTION) {
                file = selector.getSelectedFile();

                Scanner sc = new Scanner(file);
                String data = "";
                while (sc.hasNextLine()) {
                    data += sc.nextLine() + "\n";
                }
                JSONParser parser = new JSONParser();
                Object obj = parser.parse(data);
                JSONArray array = (JSONArray) obj;
                JSONObject jobj;
                for (int i = 0; i < array.size(); i++) {
                    jobj = (JSONObject) array.get(i);
                    System.out.println("-----------------------------------");

                    String dpi = String.valueOf(jobj.get("dpi"));
                    String nombre_cliente = String.valueOf(jobj.get("nombre_completo"));
                    String usuario = String.valueOf(jobj.get("nombre_usuario"));
                    String correo = String.valueOf(jobj.get("correo"));
                    String contraseña = String.valueOf(jobj.get("contrasenia"));
                    String telefono = String.valueOf(jobj.get("telefono"));
                    String municipio = String.valueOf(jobj.get("direccion"));
                    String id_municipio = String.valueOf(jobj.get("id_municipio"));

                    Clientes clienteAdmin = new Clientes(Long.parseLong(dpi), nombre_cliente, usuario, correo, contraseña, telefono, municipio, Integer.parseInt(id_municipio));
                    login.cliente.insertar(clienteAdmin);

                    System.out.println("-----------------------------------");
                }
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        try {
            Gson json = new Gson();
            JFileChooser selector = new JFileChooser();
            File file;
            selector.setMultiSelectionEnabled(false);
            FileNameExtensionFilter filtro = new FileNameExtensionFilter(null, "json");
            selector.setFileFilter(filtro);

            if (selector.showDialog(null, null) == JFileChooser.APPROVE_OPTION) {
                file = selector.getSelectedFile();

                Scanner sc = new Scanner(file);
                String data = "";
                while (sc.hasNextLine()) {
                    data += sc.nextLine() + "\n";
                }
                JSONParser parser = new JSONParser();
                Object obj = parser.parse(data);
                JSONArray array = (JSONArray) obj;
                JSONObject jobj;
                for (int i = 0; i < array.size(); i++) {
                    jobj = (JSONObject) array.get(i);
                    System.out.println("-----------------------------------");

                    String dpi = String.valueOf(jobj.get("dpi"));
                    String nombres = String.valueOf(jobj.get("nombres"));
                    String apellidos = String.valueOf(jobj.get("apellidos"));
                    String tipo_licencia = String.valueOf(jobj.get("tipo_licencia"));
                    String genero = String.valueOf(jobj.get("genero"));
                    String telefono = String.valueOf(jobj.get("telefono"));
                    String direccion = String.valueOf(jobj.get("direccion"));

                    tablah.insertar(Long.parseLong(dpi), nombres, apellidos, tipo_licencia, genero, telefono, direccion);

                    System.out.println("-----------------------------------");
                }
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        tablah.generarDotTablaHash();
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String ubicacion = "Estructuras\\TablaHash\\HashTable.png";
        Image imagen = new ImageIcon(ubicacion).getImage();
        ImageIcon imgIcon = new ImageIcon(imagen);
        jLabel1.setIcon(imgIcon);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        try {
            Gson json = new Gson();
            JFileChooser selector = new JFileChooser();
            File file;
            selector.setMultiSelectionEnabled(false);
            FileNameExtensionFilter filtro = new FileNameExtensionFilter(null, "json");
            selector.setFileFilter(filtro);

            if (selector.showDialog(null, null) == JFileChooser.APPROVE_OPTION) {
                file = selector.getSelectedFile();

                Scanner sc = new Scanner(file);
                String data = "[";
                while (sc.hasNextLine()) {
                    data += sc.nextLine() + "\n";
                }
                data+="]";
                JSONParser parser = new JSONParser();
                Object obj = parser.parse(data);
                JSONArray array = (JSONArray) obj;
                JSONObject jobj;

                for (int i = 0; i < array.size(); i++) {
                    jobj = (JSONObject) array.get(i);
                    JSONArray array2 = (JSONArray) jobj.get("Lugares");
                    JSONObject obj2;
                    for (int j = 0; j < array2.size(); j++) {
                        obj2 = (JSONObject) array2.get(j);
                        System.out.println("-----------------------------------");

                        String id = String.valueOf(obj2.get("id"));
                        String departamento = String.valueOf(obj2.get("departamento"));
                        String nombre = String.valueOf(obj2.get("nombre"));
                        String sn_sucursal = String.valueOf(obj2.get("sn_sucursal"));

                        System.out.println("id " + id);
                        System.out.println("departamento " + departamento);
                        System.out.println("nombre " + nombre);
                        System.out.println("sn_sucursal " + sn_sucursal);

                        System.out.println("-----------------------------------");
                    }

                }
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        try {
            Gson json = new Gson();
            JFileChooser selector = new JFileChooser();
            File file;
            selector.setMultiSelectionEnabled(false);
            FileNameExtensionFilter filtro = new FileNameExtensionFilter(null, "json");
            selector.setFileFilter(filtro);

            if (selector.showDialog(null, null) == JFileChooser.APPROVE_OPTION) {
                file = selector.getSelectedFile();

                Scanner sc = new Scanner(file);
                String data = "[";
                while (sc.hasNextLine()) {
                    data += sc.nextLine() + "\n";
                }
                data+="]";
                JSONParser parser = new JSONParser();
                Object obj = parser.parse(data);
                JSONArray array = (JSONArray) obj;
                JSONObject jobj;

                for (int i = 0; i < array.size(); i++) {
                    jobj = (JSONObject) array.get(i);
                    JSONArray array2 = (JSONArray) jobj.get("Grafo");
                    JSONObject obj2;
                    for (int j = 0; j < array2.size(); j++) {
                        obj2 = (JSONObject) array2.get(j);
                        System.out.println("-----------------------------------");

                        String inicio = String.valueOf(obj2.get("inicio"));
                        String finall = String.valueOf(obj2.get("final"));
                        String peso = String.valueOf(obj2.get("peso"));

                        System.out.println("inicio " + inicio);
                        System.out.println("final " + finall);
                        System.out.println("peso " + peso);

                        System.out.println("-----------------------------------");
                    }

                }
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new admin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
